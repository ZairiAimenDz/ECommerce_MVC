@using Microsoft.AspNetCore.Identity
@inject SignInManager<Models.ApplicationUser> SignInManager
@inject UserManager<Models.ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (User.IsInRole("Admin"))
        {
            <li class="nav-item active">
                <a class="nav-link" asp-controller="Admin" asp-action="Index"><i class="fas fa-chart-line"></i> Dashboard</a>
            </li>
        }
        <li class="nav-item active">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index"><i class="fas fa-user"></i> @User.Identity.Name.Split("@").First()</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark"><i class="fas fa-sign-out-alt"></i> Logout</button>
            </form>
        </li>
        @if (!User.IsInRole("Admin"))
        {
            <li class="nav-item active">
                <a class="nav-link" asp-controller="Home" asp-action="UserWishList"><i class="fas fa-heart"></i> WishList</a>
            </li>
        }
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login"><i class="fas fa-sign-in-alt"></i> Login</a>
        </li>
    }

    <li class="nav-item active">
        <a class="nav-link" asp-controller="Home" asp-action="SearchForOrder"><i class="fas fa-shipping-fast"></i> Orders</a>
    </li>


    @if (!User.IsInRole("Admin"))
    {

        <component type="typeof(ECommerce_MVC.Components.Cart.CartIcon)" render-mode="Server"
                   param-CartURL='@Url.Action("Cart","Home")' />
    }

</ul>
