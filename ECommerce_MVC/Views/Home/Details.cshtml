@model ProductDetailsViewModel


@{
    ViewData["Title"] = Model.ProdDetails.Name;
}

<link rel="stylesheet" href="_content/Radzen.Blazor/css/default-base.css">
<script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>

<div class="row mb-2">
    <div class="col-6">
        <div id="carouselExampleCaptions" class="carousel slide" data-ride="carousel">
            <ol class="carousel-indicators">
                <li data-target="#carouselExampleCaptions" data-slide-to="0" class="active"></li>
                @for (int i = 1; i <= Model.ProdDetails.ProductImages.Count(); i++)
                {
                    <li data-target="#carouselExampleCaptions" data-slide-to="@i"></li>
                }
            </ol>
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img src="/images/@Model.ProdDetails.ThumbnailURL" class="d-block w-100" alt="...">
                </div>
                @foreach (var item in Model.ProdDetails.ProductImages)
                {
                    <div class="carousel-item">
                        <img src="/images/@item.ImageFile" class="d-block w-100" alt="...">
                    </div>
                }
            </div>

            <a class="carousel-control-prev" href="#carouselExampleCaptions" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselExampleCaptions" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>
    <div class="col-6 px-4 text-left">

        <p>
            <component type="typeof(Radzen.Blazor.RadzenRating)"
                       param-ReadOnly="true" param-Stars="5" param-Value="@((int)Model.ProdDetails.rating)" render-mode="Server" /> @Model.ProdDetails.rating (@Model.ProdDetails.ratingnum Reviews)
                </p>
                <hr class="my-3" />
                <h3 class="mb-4 font-weight-bolder">@Html.DisplayFor(model => model.ProdDetails.Name)</h3>
                <p class="mb-0"><b>Category :</b><a class="btn m-0 p-0" href="@Url.Action("AllProducts","Home",new ECommerce_MVC.Dtos.Product.ProductParameters() {Categoryid=Model.ProdDetails.CategoryId })">@Html.DisplayFor(model => model.ProdDetails.Category.Name)</a></p>
                <p class="mb-0"><b>Brand :</b><a class="btn m-0 p-0" href="@Url.Action("AllProducts","Home",new ECommerce_MVC.Dtos.Product.ProductParameters() {BrandId=Model.ProdDetails.BrandId})">@Html.DisplayFor(model => model.ProdDetails.Brand.Name)</a></p>
                <p class="mb-0"><b>Condition :</b>@Html.DisplayFor(model => model.ProdDetails.ProductCondition)</p>
                <p class="mb-0"><b>Units Left :</b>@Html.DisplayFor(model => model.ProdDetails.NumberInStock)</p>
                <p><b>Color :</b>@Html.DisplayFor(model => model.ProdDetails.Color)</p>
                <p class="mb-3">@Html.DisplayFor(model => model.ProdDetails.ShortDescription)</p>
                @if (Model.ProdDetails.OldPrice > 0)
                {
                    <p class="text-danger" style="text-decoration:line-through;">@Html.DisplayFor(model => model.ProdDetails.OldPrice) @Constants.Currency</p>
                }
                <p class="text-danger">@Html.DisplayFor(model => model.ProdDetails.Price) @Constants.Currency</p>
                <a class="btn btn-info" asp-controller="Home" asp-action="CompareProducts" asp-route-id="@Model.ProdDetails.ID"><i class="fas fa-greater-than-equal"></i> Compare Product</a>
                @if (Model.ProdDetails.NumberInStock > 0)
                {
                    <component type="typeof(ECommerce_MVC.Components.Cart.CartButton)" param-ItemID="@Model.ProdDetails.ID" render-mode="Server" />
                }
                else
                {
                    <p>Product UnAvailable</p>
                }
                <br />
                @if (User.Identity.IsAuthenticated)
                {
                    <component type="typeof(WishlistButton)" param-ItemID="@Model.ProdDetails.ID" param-userid="@User.Claims.FirstOrDefault().Value" render-mode="Server" />
                }
            </div>
</div>


<div class="mb-3" style="display:flex;">
    <h3 class="flex-grow-1">Other Products To Check</h3>
    <a class="text-right" asp-controller="Home" asp-action="AllProducts">See Others</a>
</div>
<div class="mb-5" style="display: grid;grid-template-columns: repeat(auto-fit, minmax(min(100%, 17em), 1fr));">
    @foreach (var item in Model.OtherProducts.Take(4))
    {
        <component type="typeof(ECommerce_MVC.Components.Shared.ProductCard)" render-mode="ServerPrerendered"
                   param-name='@item.Name' param-price="@item.Price"
                   param-ProductImgURL='@(Url.Content("~/images/"+item.ThumbnailURL))' param-id='@item.ID'
                   param-Category='@item.Category.Name' param-ProductBrand='@item.Brand.Name'
                   param-Description='@item.ShortDescription' />
    }
</div>


<div class="p-3">
    <h3>Description</h3>
    <p class="mb-3">@Html.Raw(Model.ProdDetails.Description)</p>
</div>



<div class="p-3">
    <h3>Reviews</h3>
    <component type="typeof(ProductReviews)"
               render-mode="Server"
               param-productid="@Model.ProdDetails.ID"
               param-userid="@(User.Identity.IsAuthenticated?User.Claims.FirstOrDefault().Value:null)"
               param-islogged="@User.Identity.IsAuthenticated"/>
</div>

